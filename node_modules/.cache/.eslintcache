[{"/home/carloscigr/Trybe/cloneslido/src/index.js":"1","/home/carloscigr/Trybe/cloneslido/src/App.js":"2","/home/carloscigr/Trybe/cloneslido/src/pages/Answered.js":"3","/home/carloscigr/Trybe/cloneslido/src/pages/Home.js":"4","/home/carloscigr/Trybe/cloneslido/src/components/NavBar.js":"5","/home/carloscigr/Trybe/cloneslido/src/components/ListTasks.js":"6","/home/carloscigr/Trybe/cloneslido/src/components/User.js":"7","/home/carloscigr/Trybe/cloneslido/src/components/Task.js":"8"},{"size":214,"mtime":1620778226611,"results":"9","hashOfConfig":"10"},{"size":768,"mtime":1620779757777,"results":"11","hashOfConfig":"10"},{"size":510,"mtime":1620783276215,"results":"12","hashOfConfig":"10"},{"size":286,"mtime":1620781274060,"results":"13","hashOfConfig":"10"},{"size":278,"mtime":1620779674317,"results":"14","hashOfConfig":"10"},{"size":389,"mtime":1620778226611,"results":"15","hashOfConfig":"10"},{"size":1073,"mtime":1620786954206,"results":"16","hashOfConfig":"10"},{"size":1010,"mtime":1620781159280,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hkw3nc",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/home/carloscigr/Trybe/cloneslido/src/index.js",[],"/home/carloscigr/Trybe/cloneslido/src/App.js",[],"/home/carloscigr/Trybe/cloneslido/src/pages/Answered.js",[],"/home/carloscigr/Trybe/cloneslido/src/pages/Home.js",[],"/home/carloscigr/Trybe/cloneslido/src/components/NavBar.js",[],"/home/carloscigr/Trybe/cloneslido/src/components/ListTasks.js",[],"/home/carloscigr/Trybe/cloneslido/src/components/User.js",[],"/home/carloscigr/Trybe/cloneslido/src/components/Task.js",["35"],"import React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../App';\n\nconst Task = ({ task }) => {\n  const {\n    state,\n    state: { tasks, answered },\n    setState,\n  } = useContext(GlobalContext);\n\n\n  const setLike = () => {\n    const update = tasks.map((_task) => {\n      if (_task.question === task.question) return { ..._task, likes: _task.likes + 1 };\n      return _task;\n    });\n    setState({ ...state, tasks: update });\n  };\n\n  const updateAnswer = () => {\n      const update = tasks.filter((_task) => _task.question !== task.question);\n      setState({...state, answered: [...answered, task],  tasks: update});\n  };\n\n  const { nameUser, question, likes } = task;\n  return (\n    <div className=\"task\">\n      <h3>{nameUser}</h3>\n      <p>{question}</p>\n      <p onClick={setLike}>{likes}</p>\n      <label name=\"selectAnswer\">\n        Marcar como respondida:\n        <input type=\"checkbox\" onChange={updateAnswer}></input>\n      </label>\n    </div>\n  );\n};\n\nexport default Task;\n",{"ruleId":"36","severity":1,"message":"37","line":1,"column":29,"nodeType":"38","messageId":"39","endLine":1,"endColumn":37},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]