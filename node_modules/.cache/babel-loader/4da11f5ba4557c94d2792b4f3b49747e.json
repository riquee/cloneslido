{"ast":null,"code":"var _jsxFileName = \"/home/henrique/seila/cloneslido/src/pages/Answered.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { GlobalContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Answered = () => {\n  _s();\n\n  const {\n    state: {\n      answered\n    }\n  } = useContext(GlobalContext);\n  const listAnswered = answered.map(({\n    question,\n    nameUser\n  }, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nameUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, `${nameUser} - answer - ${idx}`, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Perguntas respondidas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), listAnswered]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Answered, \"/x7i91cMhRIgT3JKIeAAY2bvrWA=\");\n\n_c = Answered;\nexport default Answered;\n\nvar _c;\n\n$RefreshReg$(_c, \"Answered\");","map":{"version":3,"sources":["/home/henrique/seila/cloneslido/src/pages/Answered.js"],"names":["React","useContext","GlobalContext","Answered","state","answered","listAnswered","map","question","nameUser","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,QAA9B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AACJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFJ,UAAU,CAACC,aAAD,CAFd;AAIA,QAAMI,YAAY,GAAGD,QAAQ,CAACE,GAAT,CAAa,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,EAAyBC,GAAzB,kBAChC;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,KAAW,GAAEC,QAAS,eAAcC,GAAI,EAAxC;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AAOA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;GAAMH,Q;;KAAAA,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { GlobalContext } from '../App';\n\nconst Answered = () => {\n  const {\n    state: { answered },\n  } = useContext(GlobalContext);\n\n  const listAnswered = answered.map(({ question, nameUser }, idx) => (\n    <div key={`${nameUser} - answer - ${idx}`}>\n      <h2>{nameUser}</h2>\n      <p>{question}</p>\n    </div>\n  ));\n\n  return (\n    <div>\n      <h2>Perguntas respondidas</h2>\n      {listAnswered}\n    </div>\n  );\n};\n\nexport default Answered;\n"]},"metadata":{},"sourceType":"module"}