{"ast":null,"code":"var _jsxFileName = \"/home/henrique/seila/cloneslido/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = ({\n  task\n}) => {\n  _s();\n\n  const {\n    state,\n    state: {\n      tasks,\n      answered\n    },\n    setState\n  } = useContext(GlobalContext);\n\n  const setLike = () => {\n    const update = tasks.map(_task => {\n      if (_task.question === task.question) return { ..._task,\n        likes: _task.likes + 1\n      };\n      return _task;\n    });\n    setState({ ...state,\n      tasks: update\n    });\n  };\n\n  const updateAnswer = () => {\n    const update = tasks.filter(_task => _task.question !== task.question);\n    setState({ ...state,\n      answered: [...answered, task],\n      tasks: update\n    });\n  };\n\n  const {\n    nameUser,\n    question,\n    likes\n  } = task;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: nameUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: setLike,\n      children: likes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      name: \"selectAnswer\",\n      children: [\"Marcar como respondida:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: updateAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"IGPDYe0G2B43Sp/r4KgNbhDAIvw=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["/home/henrique/seila/cloneslido/src/components/Task.js"],"names":["React","useContext","useState","GlobalContext","Task","task","state","tasks","answered","setState","setLike","update","map","_task","question","likes","updateAnswer","filter","nameUser"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,QAA9B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACzB,QAAM;AACJC,IAAAA,KADI;AAEJA,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAFH;AAGJC,IAAAA;AAHI,MAIFR,UAAU,CAACE,aAAD,CAJd;;AAOA,QAAMO,OAAO,GAAG,MAAM;AACpB,UAAMC,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAWC,KAAD,IAAW;AAClC,UAAIA,KAAK,CAACC,QAAN,KAAmBT,IAAI,CAACS,QAA5B,EAAsC,OAAO,EAAE,GAAGD,KAAL;AAAYE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,GAAc;AAAjC,OAAP;AACtC,aAAOF,KAAP;AACD,KAHc,CAAf;AAIAJ,IAAAA,QAAQ,CAAC,EAAE,GAAGH,KAAL;AAAYC,MAAAA,KAAK,EAAEI;AAAnB,KAAD,CAAR;AACD,GAND;;AAQA,QAAMK,YAAY,GAAG,MAAM;AACvB,UAAML,MAAM,GAAGJ,KAAK,CAACU,MAAN,CAAcJ,KAAD,IAAWA,KAAK,CAACC,QAAN,KAAmBT,IAAI,CAACS,QAAhD,CAAf;AACAL,IAAAA,QAAQ,CAAC,EAAC,GAAGH,KAAJ;AAAWE,MAAAA,QAAQ,EAAE,CAAC,GAAGA,QAAJ,EAAcH,IAAd,CAArB;AAA2CE,MAAAA,KAAK,EAAEI;AAAlD,KAAD,CAAR;AACH,GAHD;;AAKA,QAAM;AAAEO,IAAAA,QAAF;AAAYJ,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAgCV,IAAtC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,gBAAKa;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,MAAA,OAAO,EAAEJ,OAAZ;AAAA,gBAAsBK;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAO,MAAA,IAAI,EAAC,cAAZ;AAAA,yDAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAjCD;;GAAMZ,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { GlobalContext } from '../App';\n\nconst Task = ({ task }) => {\n  const {\n    state,\n    state: { tasks, answered },\n    setState,\n  } = useContext(GlobalContext);\n\n\n  const setLike = () => {\n    const update = tasks.map((_task) => {\n      if (_task.question === task.question) return { ..._task, likes: _task.likes + 1 };\n      return _task;\n    });\n    setState({ ...state, tasks: update });\n  };\n\n  const updateAnswer = () => {\n      const update = tasks.filter((_task) => _task.question !== task.question);\n      setState({...state, answered: [...answered, task],  tasks: update});\n  };\n\n  const { nameUser, question, likes } = task;\n  return (\n    <div className=\"task\">\n      <h3>{nameUser}</h3>\n      <p>{question}</p>\n      <p onClick={setLike}>{likes}</p>\n      <label name=\"selectAnswer\">\n        Marcar como respondida:\n        <input type=\"checkbox\" onChange={updateAnswer}></input>\n      </label>\n    </div>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}